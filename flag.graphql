# FHIR GraphQL Schema. Version 4.0.1

type Flag {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  category: [CodeableConcept]
  code: CodeableConcept!
  subject: Reference!
  period: Period
  encounter: Reference
  author: Reference
}

input Flag {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  category: [CodeableConcept]
  code: CodeableConcept!
  subject: Reference!
  period: Period
  encounter: Reference
  author: Reference
}

type FlagReadType {
  Flag(id : ID!) : Flag
}

type FlagListType {
  FlagList(_filter : String
    author : [reference]
    date : [date]
    encounter : [reference]
    identifier : [token]
    patient : [reference]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Flag]
}

type FlagConnectionType {
  FlagConection(_filter : String
    author : [reference]
    date : [date]
    encounter : [reference]
    identifier : [token]
    patient : [reference]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : FlagConnection
}

type FlagConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [FlagEdge]
}

type FlagEdge {
  mode : String
  score : Float
  resource : Flag
}

type FlagCreateType {
  FlagCreate(resource : Flag) : FlagCreation
}

type FlagCreation {
  location : String
  resource : Flag
  information : OperationOutcome
}

type FlagUpdateType {
  FlagUpdate(id : IDresource : Flag) : FlagUpdate
}

type FlagUpdate {
  resource : Flag
  information : OperationOutcome
}

type FlagDeleteType {
  FlagDelete(id : ID) : FlagDelete
}

type FlagDelete {
  information : OperationOutcome
}


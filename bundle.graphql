# FHIR GraphQL Schema. Version 4.0.1

type Bundle {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  identifier: Identifier
  type: code  _type: ElementBase
  timestamp: instant  _timestamp: ElementBase
  total: unsignedInt  _total: ElementBase
  link: [BundleLink]
  entry: [BundleEntry]
  signature: Signature
}

type BundleLink {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  relation: String  _relation: ElementBase
  url: uri  _url: ElementBase
}

type BundleEntry {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  link: [BundleLink]
  fullUrl: uri  _fullUrl: ElementBase
  resource: Resource
  search: BundleEntrySearch
  request: BundleEntryRequest
  response: BundleEntryResponse
}

type BundleEntrySearch {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  mode: code  _mode: ElementBase
  score: decimal  _score: ElementBase
}

type BundleEntryRequest {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  method: code  _method: ElementBase
  url: uri  _url: ElementBase
  ifNoneMatch: String  _ifNoneMatch: ElementBase
  ifModifiedSince: instant  _ifModifiedSince: ElementBase
  ifMatch: String  _ifMatch: ElementBase
  ifNoneExist: String  _ifNoneExist: ElementBase
}

type BundleEntryResponse {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  status: String  _status: ElementBase
  location: uri  _location: ElementBase
  etag: String  _etag: ElementBase
  lastModified: instant  _lastModified: ElementBase
  outcome: Resource
}

input Bundle {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  identifier: Identifier
  type: code  _type: ElementBase
  timestamp: instant  _timestamp: ElementBase
  total: unsignedInt  _total: ElementBase
  link: [BundleLink]
  entry: [BundleEntry]
  signature: Signature
}

input BundleLink {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  relation: String  _relation: ElementBase
  url: uri  _url: ElementBase
}

input BundleEntry {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  link: [BundleLink]
  fullUrl: uri  _fullUrl: ElementBase
  resource: Resource
  search: BundleEntrySearch
  request: BundleEntryRequest
  response: BundleEntryResponse
}

input BundleEntrySearch {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  mode: code  _mode: ElementBase
  score: decimal  _score: ElementBase
}

input BundleEntryRequest {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  method: code  _method: ElementBase
  url: uri  _url: ElementBase
  ifNoneMatch: String  _ifNoneMatch: ElementBase
  ifModifiedSince: instant  _ifModifiedSince: ElementBase
  ifMatch: String  _ifMatch: ElementBase
  ifNoneExist: String  _ifNoneExist: ElementBase
}

input BundleEntryResponse {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  status: String  _status: ElementBase
  location: uri  _location: ElementBase
  etag: String  _etag: ElementBase
  lastModified: instant  _lastModified: ElementBase
  outcome: Resource
}

type BundleReadType {
  Bundle(id : ID!) : Bundle
}

type BundleListType {
  BundleList(_filter : String
    composition : [reference]
    identifier : [token]
    message : [reference]
    timestamp : [date]
    type : [token]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Bundle]
}

type BundleConnectionType {
  BundleConection(_filter : String
    composition : [reference]
    identifier : [token]
    message : [reference]
    timestamp : [date]
    type : [token]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : BundleConnection
}

type BundleConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [BundleEdge]
}

type BundleEdge {
  mode : String
  score : Float
  resource : Bundle
}

type BundleCreateType {
  BundleCreate(resource : Bundle) : BundleCreation
}

type BundleCreation {
  location : String
  resource : Bundle
  information : OperationOutcome
}

type BundleUpdateType {
  BundleUpdate(id : IDresource : Bundle) : BundleUpdate
}

type BundleUpdate {
  resource : Bundle
  information : OperationOutcome
}

type BundleDeleteType {
  BundleDelete(id : ID) : BundleDelete
}

type BundleDelete {
  information : OperationOutcome
}


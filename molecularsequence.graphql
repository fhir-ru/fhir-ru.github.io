# FHIR GraphQL Schema. Version 4.0.1

type MolecularSequence {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  type: code  _type: ElementBase
  coordinateSystem: Int  _coordinateSystem: ElementBase
  patient: Reference
  specimen: Reference
  device: Reference
  performer: Reference
  quantity: Quantity
  referenceSeq: MolecularSequenceReferenceSeq
  variant: [MolecularSequenceVariant]
  observedSeq: String  _observedSeq: ElementBase
  quality: [MolecularSequenceQuality]
  readCoverage: Int  _readCoverage: ElementBase
  repository: [MolecularSequenceRepository]
  pointer: [Reference]
  structureVariant: [MolecularSequenceStructureVariant]
}

type MolecularSequenceReferenceSeq {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  chromosome: CodeableConcept
  genomeBuild: String  _genomeBuild: ElementBase
  orientation: code  _orientation: ElementBase
  referenceSeqId: CodeableConcept
  referenceSeqPointer: Reference
  referenceSeqString: String  _referenceSeqString: ElementBase
  strand: code  _strand: ElementBase
  windowStart: Int  _windowStart: ElementBase
  windowEnd: Int  _windowEnd: ElementBase
}

type MolecularSequenceVariant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  start: Int  _start: ElementBase
  end: Int  _end: ElementBase
  observedAllele: String  _observedAllele: ElementBase
  referenceAllele: String  _referenceAllele: ElementBase
  cigar: String  _cigar: ElementBase
  variantPointer: Reference
}

type MolecularSequenceQuality {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  standardSequence: CodeableConcept
  start: Int  _start: ElementBase
  end: Int  _end: ElementBase
  score: Quantity
  method: CodeableConcept
  truthTP: decimal  _truthTP: ElementBase
  queryTP: decimal  _queryTP: ElementBase
  truthFN: decimal  _truthFN: ElementBase
  queryFP: decimal  _queryFP: ElementBase
  gtFP: decimal  _gtFP: ElementBase
  precision: decimal  _precision: ElementBase
  recall: decimal  _recall: ElementBase
  fScore: decimal  _fScore: ElementBase
  roc: MolecularSequenceQualityRoc
}

type MolecularSequenceQualityRoc {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  score: Int  _score: [ElementBase]
  numTP: Int  _numTP: [ElementBase]
  numFP: Int  _numFP: [ElementBase]
  numFN: Int  _numFN: [ElementBase]
  precision: decimal  _precision: [ElementBase]
  sensitivity: decimal  _sensitivity: [ElementBase]
  fMeasure: decimal  _fMeasure: [ElementBase]
}

type MolecularSequenceRepository {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  url: uri  _url: ElementBase
  name: String  _name: ElementBase
  datasetId: String  _datasetId: ElementBase
  variantsetId: String  _variantsetId: ElementBase
  readsetId: String  _readsetId: ElementBase
}

type MolecularSequenceStructureVariant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  variantType: CodeableConcept
  exact: Boolean  _exact: ElementBase
  length: Int  _length: ElementBase
  outer: MolecularSequenceStructureVariantOuter
  inner: MolecularSequenceStructureVariantInner
}

type MolecularSequenceStructureVariantOuter {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  start: Int  _start: ElementBase
  end: Int  _end: ElementBase
}

type MolecularSequenceStructureVariantInner {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  start: Int  _start: ElementBase
  end: Int  _end: ElementBase
}

input MolecularSequence {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  type: code  _type: ElementBase
  coordinateSystem: Int  _coordinateSystem: ElementBase
  patient: Reference
  specimen: Reference
  device: Reference
  performer: Reference
  quantity: Quantity
  referenceSeq: MolecularSequenceReferenceSeq
  variant: [MolecularSequenceVariant]
  observedSeq: String  _observedSeq: ElementBase
  quality: [MolecularSequenceQuality]
  readCoverage: Int  _readCoverage: ElementBase
  repository: [MolecularSequenceRepository]
  pointer: [Reference]
  structureVariant: [MolecularSequenceStructureVariant]
}

input MolecularSequenceReferenceSeq {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  chromosome: CodeableConcept
  genomeBuild: String  _genomeBuild: ElementBase
  orientation: code  _orientation: ElementBase
  referenceSeqId: CodeableConcept
  referenceSeqPointer: Reference
  referenceSeqString: String  _referenceSeqString: ElementBase
  strand: code  _strand: ElementBase
  windowStart: Int  _windowStart: ElementBase
  windowEnd: Int  _windowEnd: ElementBase
}

input MolecularSequenceVariant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  start: Int  _start: ElementBase
  end: Int  _end: ElementBase
  observedAllele: String  _observedAllele: ElementBase
  referenceAllele: String  _referenceAllele: ElementBase
  cigar: String  _cigar: ElementBase
  variantPointer: Reference
}

input MolecularSequenceQuality {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  standardSequence: CodeableConcept
  start: Int  _start: ElementBase
  end: Int  _end: ElementBase
  score: Quantity
  method: CodeableConcept
  truthTP: decimal  _truthTP: ElementBase
  queryTP: decimal  _queryTP: ElementBase
  truthFN: decimal  _truthFN: ElementBase
  queryFP: decimal  _queryFP: ElementBase
  gtFP: decimal  _gtFP: ElementBase
  precision: decimal  _precision: ElementBase
  recall: decimal  _recall: ElementBase
  fScore: decimal  _fScore: ElementBase
  roc: MolecularSequenceQualityRoc
}

input MolecularSequenceQualityRoc {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  score: Int  _score: [ElementBase]
  numTP: Int  _numTP: [ElementBase]
  numFP: Int  _numFP: [ElementBase]
  numFN: Int  _numFN: [ElementBase]
  precision: decimal  _precision: [ElementBase]
  sensitivity: decimal  _sensitivity: [ElementBase]
  fMeasure: decimal  _fMeasure: [ElementBase]
}

input MolecularSequenceRepository {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  url: uri  _url: ElementBase
  name: String  _name: ElementBase
  datasetId: String  _datasetId: ElementBase
  variantsetId: String  _variantsetId: ElementBase
  readsetId: String  _readsetId: ElementBase
}

input MolecularSequenceStructureVariant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  variantType: CodeableConcept
  exact: Boolean  _exact: ElementBase
  length: Int  _length: ElementBase
  outer: MolecularSequenceStructureVariantOuter
  inner: MolecularSequenceStructureVariantInner
}

input MolecularSequenceStructureVariantOuter {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  start: Int  _start: ElementBase
  end: Int  _end: ElementBase
}

input MolecularSequenceStructureVariantInner {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  start: Int  _start: ElementBase
  end: Int  _end: ElementBase
}

type MolecularSequenceReadType {
  MolecularSequence(id : ID!) : MolecularSequence
}

type MolecularSequenceListType {
  MolecularSequenceList(_filter : String
    chromosome : [token]
    chromosome_variant_coordinate : [composite]
    chromosome_window_coordinate : [composite]
    identifier : [token]
    patient : [reference]
    referenceseqid : [token]
    referenceseqid_variant_coordinate : [composite]
    referenceseqid_window_coordinate : [composite]
    type : [token]
    variant_end : [number]
    variant_start : [number]
    window_end : [number]
    window_start : [number]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [MolecularSequence]
}

type MolecularSequenceConnectionType {
  MolecularSequenceConection(_filter : String
    chromosome : [token]
    chromosome_variant_coordinate : [composite]
    chromosome_window_coordinate : [composite]
    identifier : [token]
    patient : [reference]
    referenceseqid : [token]
    referenceseqid_variant_coordinate : [composite]
    referenceseqid_window_coordinate : [composite]
    type : [token]
    variant_end : [number]
    variant_start : [number]
    window_end : [number]
    window_start : [number]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : MolecularSequenceConnection
}

type MolecularSequenceConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [MolecularSequenceEdge]
}

type MolecularSequenceEdge {
  mode : String
  score : Float
  resource : MolecularSequence
}

type MolecularSequenceCreateType {
  MolecularSequenceCreate(resource : MolecularSequence) : MolecularSequenceCreation
}

type MolecularSequenceCreation {
  location : String
  resource : MolecularSequence
  information : OperationOutcome
}

type MolecularSequenceUpdateType {
  MolecularSequenceUpdate(id : IDresource : MolecularSequence) : MolecularSequenceUpdate
}

type MolecularSequenceUpdate {
  resource : MolecularSequence
  information : OperationOutcome
}

type MolecularSequenceDeleteType {
  MolecularSequenceDelete(id : ID) : MolecularSequenceDelete
}

type MolecularSequenceDelete {
  information : OperationOutcome
}


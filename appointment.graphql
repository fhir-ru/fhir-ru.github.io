# FHIR GraphQL Schema. Version 4.0.1

type Appointment {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  cancelationReason: CodeableConcept
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableConcept]
  specialty: [CodeableConcept]
  appointmentType: CodeableConcept
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  priority: unsignedInt  _priority: ElementBase
  description: String  _description: ElementBase
  supportingInformation: [Reference]
  start: instant  _start: ElementBase
  end: instant  _end: ElementBase
  minutesDuration: positiveInt  _minutesDuration: ElementBase
  slot: [Reference]
  created: dateTime  _created: ElementBase
  comment: String  _comment: ElementBase
  patientInstruction: String  _patientInstruction: ElementBase
  basedOn: [Reference]
  participant: [AppointmentParticipant]!
  requestedPeriod: [Period]
}

type AppointmentParticipant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: [CodeableConcept]
  actor: Reference
  required: code  _required: ElementBase
  status: code  _status: ElementBase
  period: Period
}

input Appointment {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  cancelationReason: CodeableConcept
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableConcept]
  specialty: [CodeableConcept]
  appointmentType: CodeableConcept
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  priority: unsignedInt  _priority: ElementBase
  description: String  _description: ElementBase
  supportingInformation: [Reference]
  start: instant  _start: ElementBase
  end: instant  _end: ElementBase
  minutesDuration: positiveInt  _minutesDuration: ElementBase
  slot: [Reference]
  created: dateTime  _created: ElementBase
  comment: String  _comment: ElementBase
  patientInstruction: String  _patientInstruction: ElementBase
  basedOn: [Reference]
  participant: [AppointmentParticipant]!
  requestedPeriod: [Period]
}

input AppointmentParticipant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: [CodeableConcept]
  actor: Reference
  required: code  _required: ElementBase
  status: code  _status: ElementBase
  period: Period
}

type AppointmentReadType {
  Appointment(id : ID!) : Appointment
}

type AppointmentListType {
  AppointmentList(_filter : String
    actor : [reference]
    appointment_type : [token]
    based_on : [reference]
    date : [date]
    identifier : [token]
    location : [reference]
    part_status : [token]
    patient : [reference]
    practitioner : [reference]
    reason_code : [token]
    reason_reference : [reference]
    service_category : [token]
    service_type : [token]
    slot : [reference]
    specialty : [token]
    status : [token]
    supporting_info : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Appointment]
}

type AppointmentConnectionType {
  AppointmentConection(_filter : String
    actor : [reference]
    appointment_type : [token]
    based_on : [reference]
    date : [date]
    identifier : [token]
    location : [reference]
    part_status : [token]
    patient : [reference]
    practitioner : [reference]
    reason_code : [token]
    reason_reference : [reference]
    service_category : [token]
    service_type : [token]
    slot : [reference]
    specialty : [token]
    status : [token]
    supporting_info : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : AppointmentConnection
}

type AppointmentConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [AppointmentEdge]
}

type AppointmentEdge {
  mode : String
  score : Float
  resource : Appointment
}

type AppointmentCreateType {
  AppointmentCreate(resource : Appointment) : AppointmentCreation
}

type AppointmentCreation {
  location : String
  resource : Appointment
  information : OperationOutcome
}

type AppointmentUpdateType {
  AppointmentUpdate(id : IDresource : Appointment) : AppointmentUpdate
}

type AppointmentUpdate {
  resource : Appointment
  information : OperationOutcome
}

type AppointmentDeleteType {
  AppointmentDelete(id : ID) : AppointmentDelete
}

type AppointmentDelete {
  information : OperationOutcome
}


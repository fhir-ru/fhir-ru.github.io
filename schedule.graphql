# FHIR GraphQL Schema. Version 4.0.1

type Schedule {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableConcept]
  specialty: [CodeableConcept]
  actor: [Reference]!
  planningHorizon: Period
  comment: String  _comment: ElementBase
}

input Schedule {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableConcept]
  specialty: [CodeableConcept]
  actor: [Reference]!
  planningHorizon: Period
  comment: String  _comment: ElementBase
}

type ScheduleReadType {
  Schedule(id : ID!) : Schedule
}

type ScheduleListType {
  ScheduleList(_filter : String
    active : [token]
    actor : [reference]
    date : [date]
    identifier : [token]
    service_category : [token]
    service_type : [token]
    specialty : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Schedule]
}

type ScheduleConnectionType {
  ScheduleConection(_filter : String
    active : [token]
    actor : [reference]
    date : [date]
    identifier : [token]
    service_category : [token]
    service_type : [token]
    specialty : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : ScheduleConnection
}

type ScheduleConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [ScheduleEdge]
}

type ScheduleEdge {
  mode : String
  score : Float
  resource : Schedule
}

type ScheduleCreateType {
  ScheduleCreate(resource : Schedule) : ScheduleCreation
}

type ScheduleCreation {
  location : String
  resource : Schedule
  information : OperationOutcome
}

type ScheduleUpdateType {
  ScheduleUpdate(id : IDresource : Schedule) : ScheduleUpdate
}

type ScheduleUpdate {
  resource : Schedule
  information : OperationOutcome
}

type ScheduleDeleteType {
  ScheduleDelete(id : ID) : ScheduleDelete
}

type ScheduleDelete {
  information : OperationOutcome
}


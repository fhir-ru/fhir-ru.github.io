# FHIR GraphQL Schema. Version 4.0.1

type Task {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  instantiatesCanonical: canonical  _instantiatesCanonical: ElementBase
  instantiatesUri: uri  _instantiatesUri: ElementBase
  basedOn: [Reference]
  groupIdentifier: Identifier
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: CodeableConcept
  businessStatus: CodeableConcept
  intent: code  _intent: ElementBase
  priority: code  _priority: ElementBase
  code: CodeableConcept
  description: String  _description: ElementBase
  focus: Reference
  for: Reference
  encounter: Reference
  executionPeriod: Period
  authoredOn: dateTime  _authoredOn: ElementBase
  lastModified: dateTime  _lastModified: ElementBase
  requester: Reference
  performerType: [CodeableConcept]
  owner: Reference
  location: Reference
  reasonCode: CodeableConcept
  reasonReference: Reference
  insurance: [Reference]
  note: [Annotation]
  relevantHistory: [Reference]
  restriction: TaskRestriction
  input: [TaskInput]
  output: [TaskOutput]
}

type TaskRestriction {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  repetitions: positiveInt  _repetitions: ElementBase
  period: Period
  recipient: [Reference]
}

type TaskInput {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueCanonical: canonical  _valueCanonical: ElementBase
  valueCode: code  _valueCode: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueId: ID  _valueId: ElementBase
  valueInstant: instant  _valueInstant: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueMarkdown: markdown  _valueMarkdown: ElementBase
  valueOid: oid  _valueOid: ElementBase
  valuePositiveInt: positiveInt  _valuePositiveInt: ElementBase
  valueString: String  _valueString: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt  _valueUnsignedInt: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueUuid: uuid  _valueUuid: ElementBase
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
}

type TaskOutput {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueCanonical: canonical  _valueCanonical: ElementBase
  valueCode: code  _valueCode: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueId: ID  _valueId: ElementBase
  valueInstant: instant  _valueInstant: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueMarkdown: markdown  _valueMarkdown: ElementBase
  valueOid: oid  _valueOid: ElementBase
  valuePositiveInt: positiveInt  _valuePositiveInt: ElementBase
  valueString: String  _valueString: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt  _valueUnsignedInt: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueUuid: uuid  _valueUuid: ElementBase
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
}

input Task {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  instantiatesCanonical: canonical  _instantiatesCanonical: ElementBase
  instantiatesUri: uri  _instantiatesUri: ElementBase
  basedOn: [Reference]
  groupIdentifier: Identifier
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: CodeableConcept
  businessStatus: CodeableConcept
  intent: code  _intent: ElementBase
  priority: code  _priority: ElementBase
  code: CodeableConcept
  description: String  _description: ElementBase
  focus: Reference
  for: Reference
  encounter: Reference
  executionPeriod: Period
  authoredOn: dateTime  _authoredOn: ElementBase
  lastModified: dateTime  _lastModified: ElementBase
  requester: Reference
  performerType: [CodeableConcept]
  owner: Reference
  location: Reference
  reasonCode: CodeableConcept
  reasonReference: Reference
  insurance: [Reference]
  note: [Annotation]
  relevantHistory: [Reference]
  restriction: TaskRestriction
  input: [TaskInput]
  output: [TaskOutput]
}

input TaskRestriction {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  repetitions: positiveInt  _repetitions: ElementBase
  period: Period
  recipient: [Reference]
}

input TaskInput {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueCanonical: canonical  _valueCanonical: ElementBase
  valueCode: code  _valueCode: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueId: ID  _valueId: ElementBase
  valueInstant: instant  _valueInstant: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueMarkdown: markdown  _valueMarkdown: ElementBase
  valueOid: oid  _valueOid: ElementBase
  valuePositiveInt: positiveInt  _valuePositiveInt: ElementBase
  valueString: String  _valueString: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt  _valueUnsignedInt: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueUuid: uuid  _valueUuid: ElementBase
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
}

input TaskOutput {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueCanonical: canonical  _valueCanonical: ElementBase
  valueCode: code  _valueCode: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueId: ID  _valueId: ElementBase
  valueInstant: instant  _valueInstant: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueMarkdown: markdown  _valueMarkdown: ElementBase
  valueOid: oid  _valueOid: ElementBase
  valuePositiveInt: positiveInt  _valuePositiveInt: ElementBase
  valueString: String  _valueString: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt  _valueUnsignedInt: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueUuid: uuid  _valueUuid: ElementBase
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
}

type TaskReadType {
  Task(id : ID!) : Task
}

type TaskListType {
  TaskList(_filter : String
    authored_on : [date]
    based_on : [reference]
    business_status : [token]
    code : [token]
    encounter : [reference]
    focus : [reference]
    group_identifier : [token]
    identifier : [token]
    intent : [token]
    modified : [date]
    owner : [reference]
    part_of : [reference]
    patient : [reference]
    performer : [token]
    period : [date]
    priority : [token]
    requester : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Task]
}

type TaskConnectionType {
  TaskConection(_filter : String
    authored_on : [date]
    based_on : [reference]
    business_status : [token]
    code : [token]
    encounter : [reference]
    focus : [reference]
    group_identifier : [token]
    identifier : [token]
    intent : [token]
    modified : [date]
    owner : [reference]
    part_of : [reference]
    patient : [reference]
    performer : [token]
    period : [date]
    priority : [token]
    requester : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : TaskConnection
}

type TaskConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [TaskEdge]
}

type TaskEdge {
  mode : String
  score : Float
  resource : Task
}

type TaskCreateType {
  TaskCreate(resource : Task) : TaskCreation
}

type TaskCreation {
  location : String
  resource : Task
  information : OperationOutcome
}

type TaskUpdateType {
  TaskUpdate(id : IDresource : Task) : TaskUpdate
}

type TaskUpdate {
  resource : Task
  information : OperationOutcome
}

type TaskDeleteType {
  TaskDelete(id : ID) : TaskDelete
}

type TaskDelete {
  information : OperationOutcome
}


# FHIR GraphQL Schema. Version 4.0.1

type Endpoint {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  connectionType: Coding!
  name: String  _name: ElementBase
  managingOrganization: Reference
  contact: [ContactPoint]
  period: Period
  payloadType: [CodeableConcept]!
  payloadMimeType: code  _payloadMimeType: [ElementBase]
  address: url  _address: ElementBase
  header: String  _header: [ElementBase]
}

input Endpoint {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  connectionType: Coding!
  name: String  _name: ElementBase
  managingOrganization: Reference
  contact: [ContactPoint]
  period: Period
  payloadType: [CodeableConcept]!
  payloadMimeType: code  _payloadMimeType: [ElementBase]
  address: url  _address: ElementBase
  header: String  _header: [ElementBase]
}

type EndpointReadType {
  Endpoint(id : ID!) : Endpoint
}

type EndpointListType {
  EndpointList(_filter : String
    connection_type : [token]
    identifier : [token]
    name : [String]
    organization : [reference]
    payload_type : [token]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Endpoint]
}

type EndpointConnectionType {
  EndpointConection(_filter : String
    connection_type : [token]
    identifier : [token]
    name : [String]
    organization : [reference]
    payload_type : [token]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : EndpointConnection
}

type EndpointConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [EndpointEdge]
}

type EndpointEdge {
  mode : String
  score : Float
  resource : Endpoint
}

type EndpointCreateType {
  EndpointCreate(resource : Endpoint) : EndpointCreation
}

type EndpointCreation {
  location : String
  resource : Endpoint
  information : OperationOutcome
}

type EndpointUpdateType {
  EndpointUpdate(id : IDresource : Endpoint) : EndpointUpdate
}

type EndpointUpdate {
  resource : Endpoint
  information : OperationOutcome
}

type EndpointDeleteType {
  EndpointDelete(id : ID) : EndpointDelete
}

type EndpointDelete {
  information : OperationOutcome
}


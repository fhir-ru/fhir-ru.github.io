# FHIR GraphQL Schema. Version 4.0.1

type QuestionnaireResponse {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  basedOn: [Reference]
  partOf: [Reference]
  questionnaire: canonical  _questionnaire: ElementBase
  status: code  _status: ElementBase
  subject: Reference
  encounter: Reference
  authored: dateTime  _authored: ElementBase
  author: Reference
  source: Reference
  item: [QuestionnaireResponseItem]
}

type QuestionnaireResponseItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  definition: uri  _definition: ElementBase
  text: String  _text: ElementBase
  answer: [QuestionnaireResponseItemAnswer]
  item: [QuestionnaireResponseItem]
}

type QuestionnaireResponseItemAnswer {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueString: String  _valueString: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueAttachment: Attachment
  valueCoding: Coding
  valueQuantity: Quantity
  valueReference: Reference
  item: [QuestionnaireResponseItem]
}

input QuestionnaireResponse {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  basedOn: [Reference]
  partOf: [Reference]
  questionnaire: canonical  _questionnaire: ElementBase
  status: code  _status: ElementBase
  subject: Reference
  encounter: Reference
  authored: dateTime  _authored: ElementBase
  author: Reference
  source: Reference
  item: [QuestionnaireResponseItem]
}

input QuestionnaireResponseItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  definition: uri  _definition: ElementBase
  text: String  _text: ElementBase
  answer: [QuestionnaireResponseItemAnswer]
  item: [QuestionnaireResponseItem]
}

input QuestionnaireResponseItemAnswer {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueString: String  _valueString: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueAttachment: Attachment
  valueCoding: Coding
  valueQuantity: Quantity
  valueReference: Reference
  item: [QuestionnaireResponseItem]
}

type QuestionnaireResponseReadType {
  QuestionnaireResponse(id : ID!) : QuestionnaireResponse
}

type QuestionnaireResponseListType {
  QuestionnaireResponseList(_filter : String
    author : [reference]
    authored : [date]
    based_on : [reference]
    encounter : [reference]
    identifier : [token]
    part_of : [reference]
    patient : [reference]
    questionnaire : [reference]
    source : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [QuestionnaireResponse]
}

type QuestionnaireResponseConnectionType {
  QuestionnaireResponseConection(_filter : String
    author : [reference]
    authored : [date]
    based_on : [reference]
    encounter : [reference]
    identifier : [token]
    part_of : [reference]
    patient : [reference]
    questionnaire : [reference]
    source : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : QuestionnaireResponseConnection
}

type QuestionnaireResponseConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [QuestionnaireResponseEdge]
}

type QuestionnaireResponseEdge {
  mode : String
  score : Float
  resource : QuestionnaireResponse
}

type QuestionnaireResponseCreateType {
  QuestionnaireResponseCreate(resource : QuestionnaireResponse) : QuestionnaireResponseCreation
}

type QuestionnaireResponseCreation {
  location : String
  resource : QuestionnaireResponse
  information : OperationOutcome
}

type QuestionnaireResponseUpdateType {
  QuestionnaireResponseUpdate(id : IDresource : QuestionnaireResponse) : QuestionnaireResponseUpdate
}

type QuestionnaireResponseUpdate {
  resource : QuestionnaireResponse
  information : OperationOutcome
}

type QuestionnaireResponseDeleteType {
  QuestionnaireResponseDelete(id : ID) : QuestionnaireResponseDelete
}

type QuestionnaireResponseDelete {
  information : OperationOutcome
}


# FHIR GraphQL Schema. Version 4.0.1

type Subscription {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  status: code  _status: ElementBase
  contact: [ContactPoint]
  end: instant  _end: ElementBase
  reason: String  _reason: ElementBase
  criteria: String  _criteria: ElementBase
  error: String  _error: ElementBase
  channel: SubscriptionChannel!
}

type SubscriptionChannel {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  endpoint: url  _endpoint: ElementBase
  payload: code  _payload: ElementBase
  header: String  _header: [ElementBase]
}

input Subscription {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  status: code  _status: ElementBase
  contact: [ContactPoint]
  end: instant  _end: ElementBase
  reason: String  _reason: ElementBase
  criteria: String  _criteria: ElementBase
  error: String  _error: ElementBase
  channel: SubscriptionChannel!
}

input SubscriptionChannel {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  endpoint: url  _endpoint: ElementBase
  payload: code  _payload: ElementBase
  header: String  _header: [ElementBase]
}

type SubscriptionReadType {
  Subscription(id : ID!) : Subscription
}

type SubscriptionListType {
  SubscriptionList(_filter : String
    contact : [token]
    criteria : [String]
    payload : [token]
    status : [token]
    type : [token]
    url : [uri]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Subscription]
}

type SubscriptionConnectionType {
  SubscriptionConection(_filter : String
    contact : [token]
    criteria : [String]
    payload : [token]
    status : [token]
    type : [token]
    url : [uri]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : SubscriptionConnection
}

type SubscriptionConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [SubscriptionEdge]
}

type SubscriptionEdge {
  mode : String
  score : Float
  resource : Subscription
}

type SubscriptionCreateType {
  SubscriptionCreate(resource : Subscription) : SubscriptionCreation
}

type SubscriptionCreation {
  location : String
  resource : Subscription
  information : OperationOutcome
}

type SubscriptionUpdateType {
  SubscriptionUpdate(id : IDresource : Subscription) : SubscriptionUpdate
}

type SubscriptionUpdate {
  resource : Subscription
  information : OperationOutcome
}

type SubscriptionDeleteType {
  SubscriptionDelete(id : ID) : SubscriptionDelete
}

type SubscriptionDelete {
  information : OperationOutcome
}


# FHIR GraphQL Schema. Version 4.0.1

type ChargeItemDefinition {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  title: String  _title: ElementBase
  derivedFromUri: uri  _derivedFromUri: [ElementBase]
  partOf: canonical  _partOf: [ElementBase]
  replaces: canonical  _replaces: [ElementBase]
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  code: CodeableConcept
  instance: [Reference]
  applicability: [ChargeItemDefinitionApplicability]
  propertyGroup: [ChargeItemDefinitionPropertyGroup]
}

type ChargeItemDefinitionApplicability {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  language: String  _language: ElementBase
  expression: String  _expression: ElementBase
}

type ChargeItemDefinitionPropertyGroup {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  applicability: [ChargeItemDefinitionApplicability]
  priceComponent: [ChargeItemDefinitionPropertyGroupPriceComponent]
}

type ChargeItemDefinitionPropertyGroupPriceComponent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  code: CodeableConcept
  factor: decimal  _factor: ElementBase
  amount: Money
}

input ChargeItemDefinition {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  title: String  _title: ElementBase
  derivedFromUri: uri  _derivedFromUri: [ElementBase]
  partOf: canonical  _partOf: [ElementBase]
  replaces: canonical  _replaces: [ElementBase]
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  code: CodeableConcept
  instance: [Reference]
  applicability: [ChargeItemDefinitionApplicability]
  propertyGroup: [ChargeItemDefinitionPropertyGroup]
}

input ChargeItemDefinitionApplicability {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  language: String  _language: ElementBase
  expression: String  _expression: ElementBase
}

input ChargeItemDefinitionPropertyGroup {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  applicability: [ChargeItemDefinitionApplicability]
  priceComponent: [ChargeItemDefinitionPropertyGroupPriceComponent]
}

input ChargeItemDefinitionPropertyGroupPriceComponent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  code: CodeableConcept
  factor: decimal  _factor: ElementBase
  amount: Money
}

type ChargeItemDefinitionReadType {
  ChargeItemDefinition(id : ID!) : ChargeItemDefinition
}

type ChargeItemDefinitionListType {
  ChargeItemDefinitionList(_filter : String
    context : [token]
    context_quantity : [quantity]
    context_type : [token]
    context_type_quantity : [composite]
    context_type_value : [composite]
    date : [date]
    description : [String]
    effective : [date]
    identifier : [token]
    jurisdiction : [token]
    publisher : [String]
    status : [token]
    title : [String]
    url : [uri]
    version : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [ChargeItemDefinition]
}

type ChargeItemDefinitionConnectionType {
  ChargeItemDefinitionConection(_filter : String
    context : [token]
    context_quantity : [quantity]
    context_type : [token]
    context_type_quantity : [composite]
    context_type_value : [composite]
    date : [date]
    description : [String]
    effective : [date]
    identifier : [token]
    jurisdiction : [token]
    publisher : [String]
    status : [token]
    title : [String]
    url : [uri]
    version : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : ChargeItemDefinitionConnection
}

type ChargeItemDefinitionConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [ChargeItemDefinitionEdge]
}

type ChargeItemDefinitionEdge {
  mode : String
  score : Float
  resource : ChargeItemDefinition
}

type ChargeItemDefinitionCreateType {
  ChargeItemDefinitionCreate(resource : ChargeItemDefinition) : ChargeItemDefinitionCreation
}

type ChargeItemDefinitionCreation {
  location : String
  resource : ChargeItemDefinition
  information : OperationOutcome
}

type ChargeItemDefinitionUpdateType {
  ChargeItemDefinitionUpdate(id : IDresource : ChargeItemDefinition) : ChargeItemDefinitionUpdate
}

type ChargeItemDefinitionUpdate {
  resource : ChargeItemDefinition
  information : OperationOutcome
}

type ChargeItemDefinitionDeleteType {
  ChargeItemDefinitionDelete(id : ID) : ChargeItemDefinitionDelete
}

type ChargeItemDefinitionDelete {
  information : OperationOutcome
}


# FHIR GraphQL Schema. Version 4.0.1

type CommunicationRequest {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  replaces: [Reference]
  groupIdentifier: Identifier
  status: code  _status: ElementBase
  statusReason: CodeableConcept
  category: [CodeableConcept]
  priority: code  _priority: ElementBase
  doNotPerform: Boolean  _doNotPerform: ElementBase
  medium: [CodeableConcept]
  subject: Reference
  about: [Reference]
  encounter: Reference
  payload: [CommunicationRequestPayload]
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBase
  occurrencePeriod: Period
  authoredOn: dateTime  _authoredOn: ElementBase
  requester: Reference
  recipient: [Reference]
  sender: Reference
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  note: [Annotation]
}

type CommunicationRequestPayload {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  contentString: String  _contentString: ElementBase
  contentAttachment: Attachment
  contentReference: Reference
}

input CommunicationRequest {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  replaces: [Reference]
  groupIdentifier: Identifier
  status: code  _status: ElementBase
  statusReason: CodeableConcept
  category: [CodeableConcept]
  priority: code  _priority: ElementBase
  doNotPerform: Boolean  _doNotPerform: ElementBase
  medium: [CodeableConcept]
  subject: Reference
  about: [Reference]
  encounter: Reference
  payload: [CommunicationRequestPayload]
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBase
  occurrencePeriod: Period
  authoredOn: dateTime  _authoredOn: ElementBase
  requester: Reference
  recipient: [Reference]
  sender: Reference
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  note: [Annotation]
}

input CommunicationRequestPayload {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  contentString: String  _contentString: ElementBase
  contentAttachment: Attachment
  contentReference: Reference
}

type CommunicationRequestReadType {
  CommunicationRequest(id : ID!) : CommunicationRequest
}

type CommunicationRequestListType {
  CommunicationRequestList(_filter : String
    authored : [date]
    based_on : [reference]
    category : [token]
    encounter : [reference]
    group_identifier : [token]
    identifier : [token]
    medium : [token]
    occurrence : [date]
    patient : [reference]
    priority : [token]
    recipient : [reference]
    replaces : [reference]
    requester : [reference]
    sender : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [CommunicationRequest]
}

type CommunicationRequestConnectionType {
  CommunicationRequestConection(_filter : String
    authored : [date]
    based_on : [reference]
    category : [token]
    encounter : [reference]
    group_identifier : [token]
    identifier : [token]
    medium : [token]
    occurrence : [date]
    patient : [reference]
    priority : [token]
    recipient : [reference]
    replaces : [reference]
    requester : [reference]
    sender : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : CommunicationRequestConnection
}

type CommunicationRequestConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [CommunicationRequestEdge]
}

type CommunicationRequestEdge {
  mode : String
  score : Float
  resource : CommunicationRequest
}

type CommunicationRequestCreateType {
  CommunicationRequestCreate(resource : CommunicationRequest) : CommunicationRequestCreation
}

type CommunicationRequestCreation {
  location : String
  resource : CommunicationRequest
  information : OperationOutcome
}

type CommunicationRequestUpdateType {
  CommunicationRequestUpdate(id : IDresource : CommunicationRequest) : CommunicationRequestUpdate
}

type CommunicationRequestUpdate {
  resource : CommunicationRequest
  information : OperationOutcome
}

type CommunicationRequestDeleteType {
  CommunicationRequestDelete(id : ID) : CommunicationRequestDelete
}

type CommunicationRequestDelete {
  information : OperationOutcome
}


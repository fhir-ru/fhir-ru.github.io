# FHIR GraphQL Schema. Version 4.0.1

type Linkage {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  active: Boolean  _active: ElementBase
  author: Reference
  item: [LinkageItem]!
}

type LinkageItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  resource: Reference!
}

input Linkage {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  active: Boolean  _active: ElementBase
  author: Reference
  item: [LinkageItem]!
}

input LinkageItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  resource: Reference!
}

type LinkageReadType {
  Linkage(id : ID!) : Linkage
}

type LinkageListType {
  LinkageList(_filter : String
    author : [reference]
    item : [reference]
    source : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Linkage]
}

type LinkageConnectionType {
  LinkageConection(_filter : String
    author : [reference]
    item : [reference]
    source : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : LinkageConnection
}

type LinkageConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [LinkageEdge]
}

type LinkageEdge {
  mode : String
  score : Float
  resource : Linkage
}

type LinkageCreateType {
  LinkageCreate(resource : Linkage) : LinkageCreation
}

type LinkageCreation {
  location : String
  resource : Linkage
  information : OperationOutcome
}

type LinkageUpdateType {
  LinkageUpdate(id : IDresource : Linkage) : LinkageUpdate
}

type LinkageUpdate {
  resource : Linkage
  information : OperationOutcome
}

type LinkageDeleteType {
  LinkageDelete(id : ID) : LinkageDelete
}

type LinkageDelete {
  information : OperationOutcome
}


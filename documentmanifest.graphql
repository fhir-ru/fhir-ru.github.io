# FHIR GraphQL Schema. Version 4.0.1

type DocumentManifest {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  masterIdentifier: Identifier
  identifier: [Identifier]
  status: code  _status: ElementBase
  type: CodeableConcept
  subject: Reference
  created: dateTime  _created: ElementBase
  author: [Reference]
  recipient: [Reference]
  source: uri  _source: ElementBase
  description: String  _description: ElementBase
  content: [Reference]!
  related: [DocumentManifestRelated]
}

type DocumentManifestRelated {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  ref: Reference
}

input DocumentManifest {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  masterIdentifier: Identifier
  identifier: [Identifier]
  status: code  _status: ElementBase
  type: CodeableConcept
  subject: Reference
  created: dateTime  _created: ElementBase
  author: [Reference]
  recipient: [Reference]
  source: uri  _source: ElementBase
  description: String  _description: ElementBase
  content: [Reference]!
  related: [DocumentManifestRelated]
}

input DocumentManifestRelated {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  ref: Reference
}

type DocumentManifestReadType {
  DocumentManifest(id : ID!) : DocumentManifest
}

type DocumentManifestListType {
  DocumentManifestList(_filter : String
    author : [reference]
    created : [date]
    description : [String]
    identifier : [token]
    item : [reference]
    patient : [reference]
    recipient : [reference]
    related_id : [token]
    related_ref : [reference]
    source : [uri]
    status : [token]
    subject : [reference]
    type : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [DocumentManifest]
}

type DocumentManifestConnectionType {
  DocumentManifestConection(_filter : String
    author : [reference]
    created : [date]
    description : [String]
    identifier : [token]
    item : [reference]
    patient : [reference]
    recipient : [reference]
    related_id : [token]
    related_ref : [reference]
    source : [uri]
    status : [token]
    subject : [reference]
    type : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : DocumentManifestConnection
}

type DocumentManifestConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [DocumentManifestEdge]
}

type DocumentManifestEdge {
  mode : String
  score : Float
  resource : DocumentManifest
}

type DocumentManifestCreateType {
  DocumentManifestCreate(resource : DocumentManifest) : DocumentManifestCreation
}

type DocumentManifestCreation {
  location : String
  resource : DocumentManifest
  information : OperationOutcome
}

type DocumentManifestUpdateType {
  DocumentManifestUpdate(id : IDresource : DocumentManifest) : DocumentManifestUpdate
}

type DocumentManifestUpdate {
  resource : DocumentManifest
  information : OperationOutcome
}

type DocumentManifestDeleteType {
  DocumentManifestDelete(id : ID) : DocumentManifestDelete
}

type DocumentManifestDelete {
  information : OperationOutcome
}


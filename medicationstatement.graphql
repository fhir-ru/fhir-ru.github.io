# FHIR GraphQL Schema. Version 4.0.1

type MedicationStatement {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: [CodeableConcept]
  category: CodeableConcept
  medicationCodeableConcept: CodeableConcept
  medicationReference: Reference
  subject: Reference!
  context: Reference
  effectiveDateTime: dateTime  _effectiveDateTime: ElementBase
  effectivePeriod: Period
  dateAsserted: dateTime  _dateAsserted: ElementBase
  informationSource: Reference
  derivedFrom: [Reference]
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  note: [Annotation]
  dosage: [Dosage]
}

input MedicationStatement {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: [CodeableConcept]
  category: CodeableConcept
  medicationCodeableConcept: CodeableConcept
  medicationReference: Reference
  subject: Reference!
  context: Reference
  effectiveDateTime: dateTime  _effectiveDateTime: ElementBase
  effectivePeriod: Period
  dateAsserted: dateTime  _dateAsserted: ElementBase
  informationSource: Reference
  derivedFrom: [Reference]
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  note: [Annotation]
  dosage: [Dosage]
}

type MedicationStatementReadType {
  MedicationStatement(id : ID!) : MedicationStatement
}

type MedicationStatementListType {
  MedicationStatementList(_filter : String
    category : [token]
    code : [token]
    context : [reference]
    effective : [date]
    identifier : [token]
    medication : [reference]
    part_of : [reference]
    patient : [reference]
    source : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [MedicationStatement]
}

type MedicationStatementConnectionType {
  MedicationStatementConection(_filter : String
    category : [token]
    code : [token]
    context : [reference]
    effective : [date]
    identifier : [token]
    medication : [reference]
    part_of : [reference]
    patient : [reference]
    source : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : MedicationStatementConnection
}

type MedicationStatementConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [MedicationStatementEdge]
}

type MedicationStatementEdge {
  mode : String
  score : Float
  resource : MedicationStatement
}

type MedicationStatementCreateType {
  MedicationStatementCreate(resource : MedicationStatement) : MedicationStatementCreation
}

type MedicationStatementCreation {
  location : String
  resource : MedicationStatement
  information : OperationOutcome
}

type MedicationStatementUpdateType {
  MedicationStatementUpdate(id : IDresource : MedicationStatement) : MedicationStatementUpdate
}

type MedicationStatementUpdate {
  resource : MedicationStatement
  information : OperationOutcome
}

type MedicationStatementDeleteType {
  MedicationStatementDelete(id : ID) : MedicationStatementDelete
}

type MedicationStatementDelete {
  information : OperationOutcome
}


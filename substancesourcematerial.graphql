# FHIR GraphQL Schema. Version 4.0.1

type SubstanceSourceMaterial {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  sourceMaterialClass: CodeableConcept
  sourceMaterialType: CodeableConcept
  sourceMaterialState: CodeableConcept
  organismId: Identifier
  organismName: String  _organismName: ElementBase
  parentSubstanceId: [Identifier]
  parentSubstanceName: String  _parentSubstanceName: [ElementBase]
  countryOfOrigin: [CodeableConcept]
  geographicalLocation: String  _geographicalLocation: [ElementBase]
  developmentStage: CodeableConcept
  fractionDescription: [SubstanceSourceMaterialFractionDescription]
  organism: SubstanceSourceMaterialOrganism
  partDescription: [SubstanceSourceMaterialPartDescription]
}

type SubstanceSourceMaterialFractionDescription {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  fraction: String  _fraction: ElementBase
  materialType: CodeableConcept
}

type SubstanceSourceMaterialOrganism {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  family: CodeableConcept
  genus: CodeableConcept
  species: CodeableConcept
  intraspecificType: CodeableConcept
  intraspecificDescription: String  _intraspecificDescription: ElementBase
  author: [SubstanceSourceMaterialOrganismAuthor]
  hybrid: SubstanceSourceMaterialOrganismHybrid
  organismGeneral: SubstanceSourceMaterialOrganismOrganismGeneral
}

type SubstanceSourceMaterialOrganismAuthor {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  authorType: CodeableConcept
  authorDescription: String  _authorDescription: ElementBase
}

type SubstanceSourceMaterialOrganismHybrid {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  maternalOrganismId: String  _maternalOrganismId: ElementBase
  maternalOrganismName: String  _maternalOrganismName: ElementBase
  paternalOrganismId: String  _paternalOrganismId: ElementBase
  paternalOrganismName: String  _paternalOrganismName: ElementBase
  hybridType: CodeableConcept
}

type SubstanceSourceMaterialOrganismOrganismGeneral {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  kingdom: CodeableConcept
  phylum: CodeableConcept
  class: CodeableConcept
  order: CodeableConcept
}

type SubstanceSourceMaterialPartDescription {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  part: CodeableConcept
  partLocation: CodeableConcept
}

input SubstanceSourceMaterial {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  sourceMaterialClass: CodeableConcept
  sourceMaterialType: CodeableConcept
  sourceMaterialState: CodeableConcept
  organismId: Identifier
  organismName: String  _organismName: ElementBase
  parentSubstanceId: [Identifier]
  parentSubstanceName: String  _parentSubstanceName: [ElementBase]
  countryOfOrigin: [CodeableConcept]
  geographicalLocation: String  _geographicalLocation: [ElementBase]
  developmentStage: CodeableConcept
  fractionDescription: [SubstanceSourceMaterialFractionDescription]
  organism: SubstanceSourceMaterialOrganism
  partDescription: [SubstanceSourceMaterialPartDescription]
}

input SubstanceSourceMaterialFractionDescription {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  fraction: String  _fraction: ElementBase
  materialType: CodeableConcept
}

input SubstanceSourceMaterialOrganism {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  family: CodeableConcept
  genus: CodeableConcept
  species: CodeableConcept
  intraspecificType: CodeableConcept
  intraspecificDescription: String  _intraspecificDescription: ElementBase
  author: [SubstanceSourceMaterialOrganismAuthor]
  hybrid: SubstanceSourceMaterialOrganismHybrid
  organismGeneral: SubstanceSourceMaterialOrganismOrganismGeneral
}

input SubstanceSourceMaterialOrganismAuthor {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  authorType: CodeableConcept
  authorDescription: String  _authorDescription: ElementBase
}

input SubstanceSourceMaterialOrganismHybrid {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  maternalOrganismId: String  _maternalOrganismId: ElementBase
  maternalOrganismName: String  _maternalOrganismName: ElementBase
  paternalOrganismId: String  _paternalOrganismId: ElementBase
  paternalOrganismName: String  _paternalOrganismName: ElementBase
  hybridType: CodeableConcept
}

input SubstanceSourceMaterialOrganismOrganismGeneral {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  kingdom: CodeableConcept
  phylum: CodeableConcept
  class: CodeableConcept
  order: CodeableConcept
}

input SubstanceSourceMaterialPartDescription {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  part: CodeableConcept
  partLocation: CodeableConcept
}

type SubstanceSourceMaterialReadType {
  SubstanceSourceMaterial(id : ID!) : SubstanceSourceMaterial
}

type SubstanceSourceMaterialListType {
  SubstanceSourceMaterialList(_filter : String
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [SubstanceSourceMaterial]
}

type SubstanceSourceMaterialConnectionType {
  SubstanceSourceMaterialConection(_filter : String
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : SubstanceSourceMaterialConnection
}

type SubstanceSourceMaterialConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [SubstanceSourceMaterialEdge]
}

type SubstanceSourceMaterialEdge {
  mode : String
  score : Float
  resource : SubstanceSourceMaterial
}

type SubstanceSourceMaterialCreateType {
  SubstanceSourceMaterialCreate(resource : SubstanceSourceMaterial) : SubstanceSourceMaterialCreation
}

type SubstanceSourceMaterialCreation {
  location : String
  resource : SubstanceSourceMaterial
  information : OperationOutcome
}

type SubstanceSourceMaterialUpdateType {
  SubstanceSourceMaterialUpdate(id : IDresource : SubstanceSourceMaterial) : SubstanceSourceMaterialUpdate
}

type SubstanceSourceMaterialUpdate {
  resource : SubstanceSourceMaterial
  information : OperationOutcome
}

type SubstanceSourceMaterialDeleteType {
  SubstanceSourceMaterialDelete(id : ID) : SubstanceSourceMaterialDelete
}

type SubstanceSourceMaterialDelete {
  information : OperationOutcome
}


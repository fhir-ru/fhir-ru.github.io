# FHIR GraphQL Schema. Version 4.0.1

type Questionnaire {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  derivedFrom: canonical  _derivedFrom: [ElementBase]
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectType: code  _subjectType: [ElementBase]
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  code: [Coding]
  item: [QuestionnaireItem]
}

type QuestionnaireItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  definition: uri  _definition: ElementBase
  code: [Coding]
  prefix: String  _prefix: ElementBase
  text: String  _text: ElementBase
  type: code  _type: ElementBase
  enableWhen: [QuestionnaireItemEnableWhen]
  enableBehavior: code  _enableBehavior: ElementBase
  required: Boolean  _required: ElementBase
  repeats: Boolean  _repeats: ElementBase
  readOnly: Boolean  _readOnly: ElementBase
  maxLength: Int  _maxLength: ElementBase
  answerValueSet: canonical  _answerValueSet: ElementBase
  answerOption: [QuestionnaireItemAnswerOption]
  initial: [QuestionnaireItemInitial]
  item: [QuestionnaireItem]
}

type QuestionnaireItemEnableWhen {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  question: String  _question: ElementBase
  operator: code  _operator: ElementBase
  answerBoolean: Boolean  _answerBoolean: ElementBase
  answerDecimal: decimal  _answerDecimal: ElementBase
  answerInteger: Int  _answerInteger: ElementBase
  answerDate: date  _answerDate: ElementBase
  answerDateTime: dateTime  _answerDateTime: ElementBase
  answerTime: time  _answerTime: ElementBase
  answerString: String  _answerString: ElementBase
  answerCoding: Coding
  answerQuantity: Quantity
  answerReference: Reference
}

type QuestionnaireItemAnswerOption {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  valueInteger: Int  _valueInteger: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueString: String  _valueString: ElementBase
  valueCoding: Coding
  valueReference: Reference
  initialSelected: Boolean  _initialSelected: ElementBase
}

type QuestionnaireItemInitial {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueString: String  _valueString: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueAttachment: Attachment
  valueCoding: Coding
  valueQuantity: Quantity
  valueReference: Reference
}

input Questionnaire {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  derivedFrom: canonical  _derivedFrom: [ElementBase]
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectType: code  _subjectType: [ElementBase]
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  code: [Coding]
  item: [QuestionnaireItem]
}

input QuestionnaireItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  definition: uri  _definition: ElementBase
  code: [Coding]
  prefix: String  _prefix: ElementBase
  text: String  _text: ElementBase
  type: code  _type: ElementBase
  enableWhen: [QuestionnaireItemEnableWhen]
  enableBehavior: code  _enableBehavior: ElementBase
  required: Boolean  _required: ElementBase
  repeats: Boolean  _repeats: ElementBase
  readOnly: Boolean  _readOnly: ElementBase
  maxLength: Int  _maxLength: ElementBase
  answerValueSet: canonical  _answerValueSet: ElementBase
  answerOption: [QuestionnaireItemAnswerOption]
  initial: [QuestionnaireItemInitial]
  item: [QuestionnaireItem]
}

input QuestionnaireItemEnableWhen {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  question: String  _question: ElementBase
  operator: code  _operator: ElementBase
  answerBoolean: Boolean  _answerBoolean: ElementBase
  answerDecimal: decimal  _answerDecimal: ElementBase
  answerInteger: Int  _answerInteger: ElementBase
  answerDate: date  _answerDate: ElementBase
  answerDateTime: dateTime  _answerDateTime: ElementBase
  answerTime: time  _answerTime: ElementBase
  answerString: String  _answerString: ElementBase
  answerCoding: Coding
  answerQuantity: Quantity
  answerReference: Reference
}

input QuestionnaireItemAnswerOption {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  valueInteger: Int  _valueInteger: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueString: String  _valueString: ElementBase
  valueCoding: Coding
  valueReference: Reference
  initialSelected: Boolean  _initialSelected: ElementBase
}

input QuestionnaireItemInitial {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueString: String  _valueString: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueAttachment: Attachment
  valueCoding: Coding
  valueQuantity: Quantity
  valueReference: Reference
}

type QuestionnaireReadType {
  Questionnaire(id : ID!) : Questionnaire
}

type QuestionnaireListType {
  QuestionnaireList(_filter : String
    code : [token]
    context : [token]
    context_quantity : [quantity]
    context_type : [token]
    context_type_quantity : [composite]
    context_type_value : [composite]
    date : [date]
    definition : [uri]
    description : [String]
    effective : [date]
    identifier : [token]
    jurisdiction : [token]
    name : [String]
    publisher : [String]
    status : [token]
    subject_type : [token]
    title : [String]
    url : [uri]
    version : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Questionnaire]
}

type QuestionnaireConnectionType {
  QuestionnaireConection(_filter : String
    code : [token]
    context : [token]
    context_quantity : [quantity]
    context_type : [token]
    context_type_quantity : [composite]
    context_type_value : [composite]
    date : [date]
    definition : [uri]
    description : [String]
    effective : [date]
    identifier : [token]
    jurisdiction : [token]
    name : [String]
    publisher : [String]
    status : [token]
    subject_type : [token]
    title : [String]
    url : [uri]
    version : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : QuestionnaireConnection
}

type QuestionnaireConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [QuestionnaireEdge]
}

type QuestionnaireEdge {
  mode : String
  score : Float
  resource : Questionnaire
}

type QuestionnaireCreateType {
  QuestionnaireCreate(resource : Questionnaire) : QuestionnaireCreation
}

type QuestionnaireCreation {
  location : String
  resource : Questionnaire
  information : OperationOutcome
}

type QuestionnaireUpdateType {
  QuestionnaireUpdate(id : IDresource : Questionnaire) : QuestionnaireUpdate
}

type QuestionnaireUpdate {
  resource : Questionnaire
  information : OperationOutcome
}

type QuestionnaireDeleteType {
  QuestionnaireDelete(id : ID) : QuestionnaireDelete
}

type QuestionnaireDelete {
  information : OperationOutcome
}


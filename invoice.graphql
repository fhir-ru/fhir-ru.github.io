# FHIR GraphQL Schema. Version 4.0.1

type Invoice {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  cancelledReason: String  _cancelledReason: ElementBase
  type: CodeableConcept
  subject: Reference
  recipient: Reference
  date: dateTime  _date: ElementBase
  participant: [InvoiceParticipant]
  issuer: Reference
  account: Reference
  lineItem: [InvoiceLineItem]
  totalPriceComponent: [InvoiceLineItemPriceComponent]
  totalNet: Money
  totalGross: Money
  paymentTerms: markdown  _paymentTerms: ElementBase
  note: [Annotation]
}

type InvoiceParticipant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  role: CodeableConcept
  actor: Reference!
}

type InvoiceLineItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  chargeItemReference: Reference
  chargeItemCodeableConcept: CodeableConcept
  priceComponent: [InvoiceLineItemPriceComponent]
}

type InvoiceLineItemPriceComponent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  code: CodeableConcept
  factor: decimal  _factor: ElementBase
  amount: Money
}

input Invoice {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  cancelledReason: String  _cancelledReason: ElementBase
  type: CodeableConcept
  subject: Reference
  recipient: Reference
  date: dateTime  _date: ElementBase
  participant: [InvoiceParticipant]
  issuer: Reference
  account: Reference
  lineItem: [InvoiceLineItem]
  totalPriceComponent: [InvoiceLineItemPriceComponent]
  totalNet: Money
  totalGross: Money
  paymentTerms: markdown  _paymentTerms: ElementBase
  note: [Annotation]
}

input InvoiceParticipant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  role: CodeableConcept
  actor: Reference!
}

input InvoiceLineItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  chargeItemReference: Reference
  chargeItemCodeableConcept: CodeableConcept
  priceComponent: [InvoiceLineItemPriceComponent]
}

input InvoiceLineItemPriceComponent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  code: CodeableConcept
  factor: decimal  _factor: ElementBase
  amount: Money
}

type InvoiceReadType {
  Invoice(id : ID!) : Invoice
}

type InvoiceListType {
  InvoiceList(_filter : String
    account : [reference]
    date : [date]
    identifier : [token]
    issuer : [reference]
    participant : [reference]
    participant_role : [token]
    patient : [reference]
    recipient : [reference]
    status : [token]
    subject : [reference]
    totalgross : [quantity]
    totalnet : [quantity]
    type : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Invoice]
}

type InvoiceConnectionType {
  InvoiceConection(_filter : String
    account : [reference]
    date : [date]
    identifier : [token]
    issuer : [reference]
    participant : [reference]
    participant_role : [token]
    patient : [reference]
    recipient : [reference]
    status : [token]
    subject : [reference]
    totalgross : [quantity]
    totalnet : [quantity]
    type : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : InvoiceConnection
}

type InvoiceConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [InvoiceEdge]
}

type InvoiceEdge {
  mode : String
  score : Float
  resource : Invoice
}

type InvoiceCreateType {
  InvoiceCreate(resource : Invoice) : InvoiceCreation
}

type InvoiceCreation {
  location : String
  resource : Invoice
  information : OperationOutcome
}

type InvoiceUpdateType {
  InvoiceUpdate(id : IDresource : Invoice) : InvoiceUpdate
}

type InvoiceUpdate {
  resource : Invoice
  information : OperationOutcome
}

type InvoiceDeleteType {
  InvoiceDelete(id : ID) : InvoiceDelete
}

type InvoiceDelete {
  information : OperationOutcome
}


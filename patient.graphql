# FHIR GraphQL Schema. Version 4.0.1

type Patient {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  name: [HumanName]
  telecom: [ContactPoint]
  gender: code  _gender: ElementBase
  birthDate: date  _birthDate: ElementBase
  deceasedBoolean: Boolean  _deceasedBoolean: ElementBase
  deceasedDateTime: dateTime  _deceasedDateTime: ElementBase
  address: [Address]
  maritalStatus: CodeableConcept
  multipleBirthBoolean: Boolean  _multipleBirthBoolean: ElementBase
  multipleBirthInteger: Int  _multipleBirthInteger: ElementBase
  photo: [Attachment]
  contact: [PatientContact]
  communication: [PatientCommunication]
  generalPractitioner: [Reference]
  managingOrganization: Reference
  link: [PatientLink]
}

type PatientContact {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  relationship: [CodeableConcept]
  name: HumanName
  telecom: [ContactPoint]
  address: Address
  gender: code  _gender: ElementBase
  organization: Reference
  period: Period
}

type PatientCommunication {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  language: CodeableConcept!
  preferred: Boolean  _preferred: ElementBase
}

type PatientLink {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  other: Reference!
  type: code  _type: ElementBase
}

input Patient {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  name: [HumanName]
  telecom: [ContactPoint]
  gender: code  _gender: ElementBase
  birthDate: date  _birthDate: ElementBase
  deceasedBoolean: Boolean  _deceasedBoolean: ElementBase
  deceasedDateTime: dateTime  _deceasedDateTime: ElementBase
  address: [Address]
  maritalStatus: CodeableConcept
  multipleBirthBoolean: Boolean  _multipleBirthBoolean: ElementBase
  multipleBirthInteger: Int  _multipleBirthInteger: ElementBase
  photo: [Attachment]
  contact: [PatientContact]
  communication: [PatientCommunication]
  generalPractitioner: [Reference]
  managingOrganization: Reference
  link: [PatientLink]
}

input PatientContact {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  relationship: [CodeableConcept]
  name: HumanName
  telecom: [ContactPoint]
  address: Address
  gender: code  _gender: ElementBase
  organization: Reference
  period: Period
}

input PatientCommunication {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  language: CodeableConcept!
  preferred: Boolean  _preferred: ElementBase
}

input PatientLink {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  other: Reference!
  type: code  _type: ElementBase
}

type PatientReadType {
  Patient(id : ID!) : Patient
}

type PatientListType {
  PatientList(_filter : String
    active : [token]
    address : [String]
    address_city : [String]
    address_country : [String]
    address_postalcode : [String]
    address_state : [String]
    address_use : [token]
    birthdate : [date]
    death_date : [date]
    deceased : [token]
    email : [token]
    family : [String]
    gender : [token]
    general_practitioner : [reference]
    given : [String]
    identifier : [token]
    language : [token]
    link : [reference]
    name : [String]
    organization : [reference]
    phone : [token]
    phonetic : [String]
    telecom : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Patient]
}

type PatientConnectionType {
  PatientConection(_filter : String
    active : [token]
    address : [String]
    address_city : [String]
    address_country : [String]
    address_postalcode : [String]
    address_state : [String]
    address_use : [token]
    birthdate : [date]
    death_date : [date]
    deceased : [token]
    email : [token]
    family : [String]
    gender : [token]
    general_practitioner : [reference]
    given : [String]
    identifier : [token]
    language : [token]
    link : [reference]
    name : [String]
    organization : [reference]
    phone : [token]
    phonetic : [String]
    telecom : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : PatientConnection
}

type PatientConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [PatientEdge]
}

type PatientEdge {
  mode : String
  score : Float
  resource : Patient
}

type PatientCreateType {
  PatientCreate(resource : Patient) : PatientCreation
}

type PatientCreation {
  location : String
  resource : Patient
  information : OperationOutcome
}

type PatientUpdateType {
  PatientUpdate(id : IDresource : Patient) : PatientUpdate
}

type PatientUpdate {
  resource : Patient
  information : OperationOutcome
}

type PatientDeleteType {
  PatientDelete(id : ID) : PatientDelete
}

type PatientDelete {
  information : OperationOutcome
}


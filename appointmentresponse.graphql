# FHIR GraphQL Schema. Version 4.0.1

type AppointmentResponse {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  appointment: Reference!
  start: instant  _start: ElementBase
  end: instant  _end: ElementBase
  participantType: [CodeableConcept]
  actor: Reference
  participantStatus: code  _participantStatus: ElementBase
  comment: String  _comment: ElementBase
}

input AppointmentResponse {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  appointment: Reference!
  start: instant  _start: ElementBase
  end: instant  _end: ElementBase
  participantType: [CodeableConcept]
  actor: Reference
  participantStatus: code  _participantStatus: ElementBase
  comment: String  _comment: ElementBase
}

type AppointmentResponseReadType {
  AppointmentResponse(id : ID!) : AppointmentResponse
}

type AppointmentResponseListType {
  AppointmentResponseList(_filter : String
    actor : [reference]
    appointment : [reference]
    identifier : [token]
    location : [reference]
    part_status : [token]
    patient : [reference]
    practitioner : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [AppointmentResponse]
}

type AppointmentResponseConnectionType {
  AppointmentResponseConection(_filter : String
    actor : [reference]
    appointment : [reference]
    identifier : [token]
    location : [reference]
    part_status : [token]
    patient : [reference]
    practitioner : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : AppointmentResponseConnection
}

type AppointmentResponseConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [AppointmentResponseEdge]
}

type AppointmentResponseEdge {
  mode : String
  score : Float
  resource : AppointmentResponse
}

type AppointmentResponseCreateType {
  AppointmentResponseCreate(resource : AppointmentResponse) : AppointmentResponseCreation
}

type AppointmentResponseCreation {
  location : String
  resource : AppointmentResponse
  information : OperationOutcome
}

type AppointmentResponseUpdateType {
  AppointmentResponseUpdate(id : IDresource : AppointmentResponse) : AppointmentResponseUpdate
}

type AppointmentResponseUpdate {
  resource : AppointmentResponse
  information : OperationOutcome
}

type AppointmentResponseDeleteType {
  AppointmentResponseDelete(id : ID) : AppointmentResponseDelete
}

type AppointmentResponseDelete {
  information : OperationOutcome
}


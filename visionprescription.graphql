# FHIR GraphQL Schema. Version 4.0.1

type VisionPrescription {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  created: dateTime  _created: ElementBase
  patient: Reference!
  encounter: Reference
  dateWritten: dateTime  _dateWritten: ElementBase
  prescriber: Reference!
  lensSpecification: [VisionPrescriptionLensSpecification]!
}

type VisionPrescriptionLensSpecification {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  product: CodeableConcept!
  eye: code  _eye: ElementBase
  sphere: decimal  _sphere: ElementBase
  cylinder: decimal  _cylinder: ElementBase
  axis: Int  _axis: ElementBase
  prism: [VisionPrescriptionLensSpecificationPrism]
  add: decimal  _add: ElementBase
  power: decimal  _power: ElementBase
  backCurve: decimal  _backCurve: ElementBase
  diameter: decimal  _diameter: ElementBase
  duration: Quantity
  color: String  _color: ElementBase
  brand: String  _brand: ElementBase
  note: [Annotation]
}

type VisionPrescriptionLensSpecificationPrism {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  amount: decimal  _amount: ElementBase
  base: code  _base: ElementBase
}

input VisionPrescription {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  created: dateTime  _created: ElementBase
  patient: Reference!
  encounter: Reference
  dateWritten: dateTime  _dateWritten: ElementBase
  prescriber: Reference!
  lensSpecification: [VisionPrescriptionLensSpecification]!
}

input VisionPrescriptionLensSpecification {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  product: CodeableConcept!
  eye: code  _eye: ElementBase
  sphere: decimal  _sphere: ElementBase
  cylinder: decimal  _cylinder: ElementBase
  axis: Int  _axis: ElementBase
  prism: [VisionPrescriptionLensSpecificationPrism]
  add: decimal  _add: ElementBase
  power: decimal  _power: ElementBase
  backCurve: decimal  _backCurve: ElementBase
  diameter: decimal  _diameter: ElementBase
  duration: Quantity
  color: String  _color: ElementBase
  brand: String  _brand: ElementBase
  note: [Annotation]
}

input VisionPrescriptionLensSpecificationPrism {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  amount: decimal  _amount: ElementBase
  base: code  _base: ElementBase
}

type VisionPrescriptionReadType {
  VisionPrescription(id : ID!) : VisionPrescription
}

type VisionPrescriptionListType {
  VisionPrescriptionList(_filter : String
    datewritten : [date]
    encounter : [reference]
    identifier : [token]
    patient : [reference]
    prescriber : [reference]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [VisionPrescription]
}

type VisionPrescriptionConnectionType {
  VisionPrescriptionConection(_filter : String
    datewritten : [date]
    encounter : [reference]
    identifier : [token]
    patient : [reference]
    prescriber : [reference]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : VisionPrescriptionConnection
}

type VisionPrescriptionConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [VisionPrescriptionEdge]
}

type VisionPrescriptionEdge {
  mode : String
  score : Float
  resource : VisionPrescription
}

type VisionPrescriptionCreateType {
  VisionPrescriptionCreate(resource : VisionPrescription) : VisionPrescriptionCreation
}

type VisionPrescriptionCreation {
  location : String
  resource : VisionPrescription
  information : OperationOutcome
}

type VisionPrescriptionUpdateType {
  VisionPrescriptionUpdate(id : IDresource : VisionPrescription) : VisionPrescriptionUpdate
}

type VisionPrescriptionUpdate {
  resource : VisionPrescription
  information : OperationOutcome
}

type VisionPrescriptionDeleteType {
  VisionPrescriptionDelete(id : ID) : VisionPrescriptionDelete
}

type VisionPrescriptionDelete {
  information : OperationOutcome
}


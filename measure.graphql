# FHIR GraphQL Schema. Version 4.0.1

type Measure {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  subtitle: String  _subtitle: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  usage: String  _usage: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  topic: [CodeableConcept]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatedArtifact: [RelatedArtifact]
  library: canonical  _library: [ElementBase]
  disclaimer: markdown  _disclaimer: ElementBase
  scoring: CodeableConcept
  compositeScoring: CodeableConcept
  type: [CodeableConcept]
  riskAdjustment: String  _riskAdjustment: ElementBase
  rateAggregation: String  _rateAggregation: ElementBase
  rationale: markdown  _rationale: ElementBase
  clinicalRecommendationStatement: markdown  _clinicalRecommendationStatement: ElementBase
  improvementNotation: CodeableConcept
  definition: markdown  _definition: [ElementBase]
  guidance: markdown  _guidance: ElementBase
  group: [MeasureGroup]
  supplementalData: [MeasureSupplementalData]
}

type MeasureGroup {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  description: String  _description: ElementBase
  population: [MeasureGroupPopulation]
  stratifier: [MeasureGroupStratifier]
}

type MeasureGroupPopulation {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  description: String  _description: ElementBase
  criteria: Expression!
}

type MeasureGroupStratifier {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  description: String  _description: ElementBase
  criteria: Expression
  component: [MeasureGroupStratifierComponent]
}

type MeasureGroupStratifierComponent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  description: String  _description: ElementBase
  criteria: Expression!
}

type MeasureSupplementalData {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  usage: [CodeableConcept]
  description: String  _description: ElementBase
  criteria: Expression!
}

input Measure {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  subtitle: String  _subtitle: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  usage: String  _usage: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  topic: [CodeableConcept]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatedArtifact: [RelatedArtifact]
  library: canonical  _library: [ElementBase]
  disclaimer: markdown  _disclaimer: ElementBase
  scoring: CodeableConcept
  compositeScoring: CodeableConcept
  type: [CodeableConcept]
  riskAdjustment: String  _riskAdjustment: ElementBase
  rateAggregation: String  _rateAggregation: ElementBase
  rationale: markdown  _rationale: ElementBase
  clinicalRecommendationStatement: markdown  _clinicalRecommendationStatement: ElementBase
  improvementNotation: CodeableConcept
  definition: markdown  _definition: [ElementBase]
  guidance: markdown  _guidance: ElementBase
  group: [MeasureGroup]
  supplementalData: [MeasureSupplementalData]
}

input MeasureGroup {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  description: String  _description: ElementBase
  population: [MeasureGroupPopulation]
  stratifier: [MeasureGroupStratifier]
}

input MeasureGroupPopulation {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  description: String  _description: ElementBase
  criteria: Expression!
}

input MeasureGroupStratifier {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  description: String  _description: ElementBase
  criteria: Expression
  component: [MeasureGroupStratifierComponent]
}

input MeasureGroupStratifierComponent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  description: String  _description: ElementBase
  criteria: Expression!
}

input MeasureSupplementalData {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  usage: [CodeableConcept]
  description: String  _description: ElementBase
  criteria: Expression!
}

type MeasureReadType {
  Measure(id : ID!) : Measure
}

type MeasureListType {
  MeasureList(_filter : String
    composed_of : [reference]
    context : [token]
    context_quantity : [quantity]
    context_type : [token]
    context_type_quantity : [composite]
    context_type_value : [composite]
    date : [date]
    depends_on : [reference]
    derived_from : [reference]
    description : [String]
    effective : [date]
    identifier : [token]
    jurisdiction : [token]
    name : [String]
    predecessor : [reference]
    publisher : [String]
    status : [token]
    successor : [reference]
    title : [String]
    topic : [token]
    url : [uri]
    version : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Measure]
}

type MeasureConnectionType {
  MeasureConection(_filter : String
    composed_of : [reference]
    context : [token]
    context_quantity : [quantity]
    context_type : [token]
    context_type_quantity : [composite]
    context_type_value : [composite]
    date : [date]
    depends_on : [reference]
    derived_from : [reference]
    description : [String]
    effective : [date]
    identifier : [token]
    jurisdiction : [token]
    name : [String]
    predecessor : [reference]
    publisher : [String]
    status : [token]
    successor : [reference]
    title : [String]
    topic : [token]
    url : [uri]
    version : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : MeasureConnection
}

type MeasureConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [MeasureEdge]
}

type MeasureEdge {
  mode : String
  score : Float
  resource : Measure
}

type MeasureCreateType {
  MeasureCreate(resource : Measure) : MeasureCreation
}

type MeasureCreation {
  location : String
  resource : Measure
  information : OperationOutcome
}

type MeasureUpdateType {
  MeasureUpdate(id : IDresource : Measure) : MeasureUpdate
}

type MeasureUpdate {
  resource : Measure
  information : OperationOutcome
}

type MeasureDeleteType {
  MeasureDelete(id : ID) : MeasureDelete
}

type MeasureDelete {
  information : OperationOutcome
}


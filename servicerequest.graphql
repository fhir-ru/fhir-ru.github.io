# FHIR GraphQL Schema. Version 4.0.1

type ServiceRequest {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  instantiatesCanonical: canonical  _instantiatesCanonical: [ElementBase]
  instantiatesUri: uri  _instantiatesUri: [ElementBase]
  basedOn: [Reference]
  replaces: [Reference]
  requisition: Identifier
  status: code  _status: ElementBase
  intent: code  _intent: ElementBase
  category: [CodeableConcept]
  priority: code  _priority: ElementBase
  doNotPerform: Boolean  _doNotPerform: ElementBase
  code: CodeableConcept
  orderDetail: [CodeableConcept]
  quantityQuantity: Quantity
  quantityRatio: Ratio
  quantityRange: Range
  subject: Reference!
  encounter: Reference
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBase
  occurrencePeriod: Period
  occurrenceTiming: Timing
  asNeededBoolean: Boolean  _asNeededBoolean: ElementBase
  asNeededCodeableConcept: CodeableConcept
  authoredOn: dateTime  _authoredOn: ElementBase
  requester: Reference
  performerType: CodeableConcept
  performer: [Reference]
  locationCode: [CodeableConcept]
  locationReference: [Reference]
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  insurance: [Reference]
  supportingInfo: [Reference]
  specimen: [Reference]
  bodySite: [CodeableConcept]
  note: [Annotation]
  patientInstruction: String  _patientInstruction: ElementBase
  relevantHistory: [Reference]
}

input ServiceRequest {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  instantiatesCanonical: canonical  _instantiatesCanonical: [ElementBase]
  instantiatesUri: uri  _instantiatesUri: [ElementBase]
  basedOn: [Reference]
  replaces: [Reference]
  requisition: Identifier
  status: code  _status: ElementBase
  intent: code  _intent: ElementBase
  category: [CodeableConcept]
  priority: code  _priority: ElementBase
  doNotPerform: Boolean  _doNotPerform: ElementBase
  code: CodeableConcept
  orderDetail: [CodeableConcept]
  quantityQuantity: Quantity
  quantityRatio: Ratio
  quantityRange: Range
  subject: Reference!
  encounter: Reference
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBase
  occurrencePeriod: Period
  occurrenceTiming: Timing
  asNeededBoolean: Boolean  _asNeededBoolean: ElementBase
  asNeededCodeableConcept: CodeableConcept
  authoredOn: dateTime  _authoredOn: ElementBase
  requester: Reference
  performerType: CodeableConcept
  performer: [Reference]
  locationCode: [CodeableConcept]
  locationReference: [Reference]
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  insurance: [Reference]
  supportingInfo: [Reference]
  specimen: [Reference]
  bodySite: [CodeableConcept]
  note: [Annotation]
  patientInstruction: String  _patientInstruction: ElementBase
  relevantHistory: [Reference]
}

type ServiceRequestReadType {
  ServiceRequest(id : ID!) : ServiceRequest
}

type ServiceRequestListType {
  ServiceRequestList(_filter : String
    authored : [date]
    based_on : [reference]
    body_site : [token]
    category : [token]
    code : [token]
    encounter : [reference]
    identifier : [token]
    instantiates_canonical : [reference]
    instantiates_uri : [uri]
    intent : [token]
    occurrence : [date]
    patient : [reference]
    performer : [reference]
    performer_type : [token]
    priority : [token]
    replaces : [reference]
    requester : [reference]
    requisition : [token]
    specimen : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [ServiceRequest]
}

type ServiceRequestConnectionType {
  ServiceRequestConection(_filter : String
    authored : [date]
    based_on : [reference]
    body_site : [token]
    category : [token]
    code : [token]
    encounter : [reference]
    identifier : [token]
    instantiates_canonical : [reference]
    instantiates_uri : [uri]
    intent : [token]
    occurrence : [date]
    patient : [reference]
    performer : [reference]
    performer_type : [token]
    priority : [token]
    replaces : [reference]
    requester : [reference]
    requisition : [token]
    specimen : [reference]
    status : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : ServiceRequestConnection
}

type ServiceRequestConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [ServiceRequestEdge]
}

type ServiceRequestEdge {
  mode : String
  score : Float
  resource : ServiceRequest
}

type ServiceRequestCreateType {
  ServiceRequestCreate(resource : ServiceRequest) : ServiceRequestCreation
}

type ServiceRequestCreation {
  location : String
  resource : ServiceRequest
  information : OperationOutcome
}

type ServiceRequestUpdateType {
  ServiceRequestUpdate(id : IDresource : ServiceRequest) : ServiceRequestUpdate
}

type ServiceRequestUpdate {
  resource : ServiceRequest
  information : OperationOutcome
}

type ServiceRequestDeleteType {
  ServiceRequestDelete(id : ID) : ServiceRequestDelete
}

type ServiceRequestDelete {
  information : OperationOutcome
}


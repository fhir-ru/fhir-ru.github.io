# FHIR GraphQL Schema. Version 4.0.1

type PaymentReconciliation {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  period: Period
  created: dateTime  _created: ElementBase
  paymentIssuer: Reference
  request: Reference
  requestor: Reference
  outcome: code  _outcome: ElementBase
  disposition: String  _disposition: ElementBase
  paymentDate: date  _paymentDate: ElementBase
  paymentAmount: Money!
  paymentIdentifier: Identifier
  detail: [PaymentReconciliationDetail]
  formCode: CodeableConcept
  processNote: [PaymentReconciliationProcessNote]
}

type PaymentReconciliationDetail {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  predecessor: Identifier
  type: CodeableConcept!
  request: Reference
  submitter: Reference
  response: Reference
  date: date  _date: ElementBase
  responsible: Reference
  payee: Reference
  amount: Money
}

type PaymentReconciliationProcessNote {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  text: String  _text: ElementBase
}

input PaymentReconciliation {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  period: Period
  created: dateTime  _created: ElementBase
  paymentIssuer: Reference
  request: Reference
  requestor: Reference
  outcome: code  _outcome: ElementBase
  disposition: String  _disposition: ElementBase
  paymentDate: date  _paymentDate: ElementBase
  paymentAmount: Money!
  paymentIdentifier: Identifier
  detail: [PaymentReconciliationDetail]
  formCode: CodeableConcept
  processNote: [PaymentReconciliationProcessNote]
}

input PaymentReconciliationDetail {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  predecessor: Identifier
  type: CodeableConcept!
  request: Reference
  submitter: Reference
  response: Reference
  date: date  _date: ElementBase
  responsible: Reference
  payee: Reference
  amount: Money
}

input PaymentReconciliationProcessNote {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  text: String  _text: ElementBase
}

type PaymentReconciliationReadType {
  PaymentReconciliation(id : ID!) : PaymentReconciliation
}

type PaymentReconciliationListType {
  PaymentReconciliationList(_filter : String
    created : [date]
    disposition : [String]
    identifier : [token]
    outcome : [token]
    payment_issuer : [reference]
    request : [reference]
    requestor : [reference]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [PaymentReconciliation]
}

type PaymentReconciliationConnectionType {
  PaymentReconciliationConection(_filter : String
    created : [date]
    disposition : [String]
    identifier : [token]
    outcome : [token]
    payment_issuer : [reference]
    request : [reference]
    requestor : [reference]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : PaymentReconciliationConnection
}

type PaymentReconciliationConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [PaymentReconciliationEdge]
}

type PaymentReconciliationEdge {
  mode : String
  score : Float
  resource : PaymentReconciliation
}

type PaymentReconciliationCreateType {
  PaymentReconciliationCreate(resource : PaymentReconciliation) : PaymentReconciliationCreation
}

type PaymentReconciliationCreation {
  location : String
  resource : PaymentReconciliation
  information : OperationOutcome
}

type PaymentReconciliationUpdateType {
  PaymentReconciliationUpdate(id : IDresource : PaymentReconciliation) : PaymentReconciliationUpdate
}

type PaymentReconciliationUpdate {
  resource : PaymentReconciliation
  information : OperationOutcome
}

type PaymentReconciliationDeleteType {
  PaymentReconciliationDelete(id : ID) : PaymentReconciliationDelete
}

type PaymentReconciliationDelete {
  information : OperationOutcome
}


# FHIR GraphQL Schema. Version 4.0.1

type ActivityDefinition {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  subtitle: String  _subtitle: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  usage: String  _usage: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  topic: [CodeableConcept]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatedArtifact: [RelatedArtifact]
  library: canonical  _library: [ElementBase]
  kind: code  _kind: ElementBase
  profile: canonical  _profile: ElementBase
  code: CodeableConcept
  intent: code  _intent: ElementBase
  priority: code  _priority: ElementBase
  doNotPerform: Boolean  _doNotPerform: ElementBase
  timingTiming: Timing
  timingDateTime: dateTime  _timingDateTime: ElementBase
  timingAge: Age
  timingPeriod: Period
  timingRange: Range
  timingDuration: Duration
  location: Reference
  participant: [ActivityDefinitionParticipant]
  productReference: Reference
  productCodeableConcept: CodeableConcept
  quantity: Quantity
  dosage: [Dosage]
  bodySite: [CodeableConcept]
  specimenRequirement: [Reference]
  observationRequirement: [Reference]
  observationResultRequirement: [Reference]
  transform: canonical  _transform: ElementBase
  dynamicValue: [ActivityDefinitionDynamicValue]
}

type ActivityDefinitionParticipant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  role: CodeableConcept
}

type ActivityDefinitionDynamicValue {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  path: String  _path: ElementBase
  expression: Expression!
}

input ActivityDefinition {
  id: String
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  subtitle: String  _subtitle: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  usage: String  _usage: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  topic: [CodeableConcept]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatedArtifact: [RelatedArtifact]
  library: canonical  _library: [ElementBase]
  kind: code  _kind: ElementBase
  profile: canonical  _profile: ElementBase
  code: CodeableConcept
  intent: code  _intent: ElementBase
  priority: code  _priority: ElementBase
  doNotPerform: Boolean  _doNotPerform: ElementBase
  timingTiming: Timing
  timingDateTime: dateTime  _timingDateTime: ElementBase
  timingAge: Age
  timingPeriod: Period
  timingRange: Range
  timingDuration: Duration
  location: Reference
  participant: [ActivityDefinitionParticipant]
  productReference: Reference
  productCodeableConcept: CodeableConcept
  quantity: Quantity
  dosage: [Dosage]
  bodySite: [CodeableConcept]
  specimenRequirement: [Reference]
  observationRequirement: [Reference]
  observationResultRequirement: [Reference]
  transform: canonical  _transform: ElementBase
  dynamicValue: [ActivityDefinitionDynamicValue]
}

input ActivityDefinitionParticipant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  role: CodeableConcept
}

input ActivityDefinitionDynamicValue {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  path: String  _path: ElementBase
  expression: Expression!
}

type ActivityDefinitionReadType {
  ActivityDefinition(id : ID!) : ActivityDefinition
}

type ActivityDefinitionListType {
  ActivityDefinitionList(_filter : String
    composed_of : [reference]
    context : [token]
    context_quantity : [quantity]
    context_type : [token]
    context_type_quantity : [composite]
    context_type_value : [composite]
    date : [date]
    depends_on : [reference]
    derived_from : [reference]
    description : [String]
    effective : [date]
    identifier : [token]
    jurisdiction : [token]
    name : [String]
    predecessor : [reference]
    publisher : [String]
    status : [token]
    successor : [reference]
    title : [String]
    topic : [token]
    url : [uri]
    version : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [ActivityDefinition]
}

type ActivityDefinitionConnectionType {
  ActivityDefinitionConection(_filter : String
    composed_of : [reference]
    context : [token]
    context_quantity : [quantity]
    context_type : [token]
    context_type_quantity : [composite]
    context_type_value : [composite]
    date : [date]
    depends_on : [reference]
    derived_from : [reference]
    description : [String]
    effective : [date]
    identifier : [token]
    jurisdiction : [token]
    name : [String]
    predecessor : [reference]
    publisher : [String]
    status : [token]
    successor : [reference]
    title : [String]
    topic : [token]
    url : [uri]
    version : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [uri]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : ActivityDefinitionConnection
}

type ActivityDefinitionConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [ActivityDefinitionEdge]
}

type ActivityDefinitionEdge {
  mode : String
  score : Float
  resource : ActivityDefinition
}

type ActivityDefinitionCreateType {
  ActivityDefinitionCreate(resource : ActivityDefinition) : ActivityDefinitionCreation
}

type ActivityDefinitionCreation {
  location : String
  resource : ActivityDefinition
  information : OperationOutcome
}

type ActivityDefinitionUpdateType {
  ActivityDefinitionUpdate(id : IDresource : ActivityDefinition) : ActivityDefinitionUpdate
}

type ActivityDefinitionUpdate {
  resource : ActivityDefinition
  information : OperationOutcome
}

type ActivityDefinitionDeleteType {
  ActivityDefinitionDelete(id : ID) : ActivityDefinitionDelete
}

type ActivityDefinitionDelete {
  information : OperationOutcome
}

